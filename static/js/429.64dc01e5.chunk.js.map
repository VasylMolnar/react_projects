{"version":3,"file":"static/js/429.64dc01e5.chunk.js","mappings":"+OA0CA,EAhCmB,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACdC,EAAeC,KAAKC,MAAsB,EAAhBD,KAAKE,UAErC,OACE,SAACC,EAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,UAC7B,SAAC,KAAI,CAACC,GAAE,kBAAaV,EAAMW,QAAS,UAClC,UAACC,EAAA,EAAI,CAACC,GAAI,CAAEC,SAAU,KAAOC,UAAU,OAAM,WAC3C,SAACC,EAAA,EAAS,CACRH,GAAI,CAAEI,OAAQ,KACdC,MAAOlB,EAAMmB,OAAOlB,GACpBmB,MAAOpB,EAAMqB,SAEf,SAACC,EAAA,EAAW,CAACC,MAAO,CAAEC,QAAS,OAAQ,UACrC,SAACC,EAAA,EAAU,CAACC,cAAY,EAACC,QAAQ,IAAIC,UAAU,IAAG,SAC/C5B,EAAMqB,WAGX,UAACC,EAAA,EAAW,CAACC,MAAO,CAAEC,QAAS,OAAQ,WACrC,SAACC,EAAA,EAAU,CAACE,QAAQ,IAAIC,UAAU,IAAG,SAClC5B,EAAM6B,cAET,SAACC,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,mBAMnD,E,UCnBA,EAhBmB,SAAH,GAAoB,IAAdC,EAAM,EAANA,OACpB,OACE,SAACC,EAAA,EAAG,CAACpB,GAAI,CAAEqB,SAAU,GAAI,UACvB,SAAC7B,EAAA,GAAI,CACH8B,WAAS,EACTC,QAAS,CAAE7B,GAAI,EAAGE,GAAI,GACtB4B,QAAS,CAAE9B,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAK,SAEjCuB,EAAOM,KAAI,SAAAtC,GAAK,OACf,SAAC,EAAU,CAACA,MAAOA,GAAYA,EAAMW,OAAU,OAKzD,C,4ICiBA,EAhCe,SAAH,GAAoB,IAAdqB,EAAM,EAANA,OAChB,OACE,iBAAKT,MAAO,CAAEgB,OAAQ,YAAa,WACjC,SAACd,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,KAAI,SACpCI,EAAO,GAAGX,SAEb,SAACI,EAAA,EAAU,CAACE,QAAQ,IAAIC,UAAU,IAAG,SAClCI,EAAO,GAAGQ,QAEb,SAACf,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,KAAI,SAAC,0NAKxC,mBACA,UAACH,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,KAAI,UAAC,WAC7BI,EAAO,GAAGS,QACnB,kBAAM,WACGT,EAAO,GAAGU,QACnB,kBAAM,SACCV,EAAO,GAAGW,SAEnB,kBAAM,WACGX,EAAO,GAAGH,YACnB,SAACC,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,WACvC,SAACD,EAAA,EAAqB,CAACP,MAAO,CAAEQ,MAAO,YAG7C,EC9Baa,EAAa,WACxB,OAA+CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDC,EAAW,EAAXA,YAAsB,EAATC,UAAqB,EAAVC,WAEhC,GAAIF,EACF,OAAO,SAACG,EAAA,EAAU,CAAClB,OAAQe,GAE/B,ECmCA,EApCiB,WACf,OAA8CF,EAAAA,EAAAA,YAAWM,EAAAA,GAAjDC,EAAU,EAAVA,WAAYJ,EAAS,EAATA,UAAWC,EAAU,EAAVA,WAE/B,OACE,qBAASlC,UAAU,mBAAkB,UAClCiC,GAAaK,EAAAA,QAAAA,OAAe,cAC5BJ,IACEK,EAAAA,OAAAA,QAAe,QAAQ,GAAD,OAAKL,IAAeI,EAAAA,QAAAA,WAC3CL,IACCC,IACAI,EAAAA,QAAAA,UAEC,iCACE,SAAC,EAAM,CAACrB,OAAQoB,KAChB,SAACF,EAAA,EAAU,CAAClB,OAAQoB,KAEpB,UAAC3B,EAAA,EAAU,CACTE,QAAQ,KACRC,UAAU,KACVL,MAAO,CACLgC,UAAW,SACXxB,MAAO,QACPQ,OAAQ,aACR,UACH,UAEC,iBAAMhB,MAAO,CAAEQ,MAAO,OAAQ,SAAC,aAGjC,SAACa,EAAU,UAKvB,C","sources":["components/MoviesList/MoviesCard.jsx","components/MoviesList/MoviesList.jsx","components/Rating/Rating.jsx","page/ComingSoon.jsx","page/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport StarBorderRoundedIcon from '@mui/icons-material/StarBorderRounded';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport './index.css';\nimport { Link } from 'react-router-dom';\n\nconst MoviesCard = ({ movie }) => {\n  const randomNumber = Math.floor(Math.random() * 3);\n\n  return (\n    <Grid item xs={2} sm={4} md={2}>\n      <Link to={`/movies/${movie.imdbID}`}>\n        <Card sx={{ maxWidth: 250 }} className=\"card\">\n          <CardMedia\n            sx={{ height: 200 }}\n            image={movie.Images[randomNumber]}\n            title={movie.Title}\n          />\n          <CardContent style={{ padding: '5px' }}>\n            <Typography gutterBottom variant=\"p\" component=\"p\">\n              {movie.Title}\n            </Typography>\n          </CardContent>\n          <CardContent style={{ padding: '5px' }}>\n            <Typography variant=\"p\" component=\"p\">\n              {movie.imdbRating}\n            </Typography>\n            <StarBorderRoundedIcon style={{ color: 'gold' }} />\n            <StarBorderRoundedIcon style={{ color: 'gold' }} />\n            <StarBorderRoundedIcon style={{ color: 'gold' }} />\n            <StarBorderRoundedIcon style={{ color: 'gold' }} />\n          </CardContent>\n        </Card>\n      </Link>\n    </Grid>\n  );\n};\n\nexport default MoviesCard;\n","import React from 'react';\nimport MoviesCard from './MoviesCard';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {movies.map(movie => (\n          <MoviesCard movie={movie} key={movie.imdbID} />\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MoviesList;\n","import { React } from 'react';\nimport { Typography } from '@mui/material';\nimport StarBorderRoundedIcon from '@mui/icons-material/StarBorderRounded';\n\nconst Rating = ({ movies }) => {\n  return (\n    <div style={{ margin: '7rem 0px' }}>\n      <Typography variant=\"h2\" component=\"h2\">\n        {movies[0].Title}\n      </Typography>\n      <Typography variant=\"p\" component=\"p\">\n        {movies[0].Plot}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h2\">\n        It is a long established fact that a reader wil be distracted by the\n        readable content of a page when looking at its layout the point of using\n        Lorem Ipsum is that it has a more-or-less normal distribution letters.\n      </Typography>\n      <br />\n      <Typography variant=\"h6\" component=\"h2\">\n        Awards: {movies[0].Awards}\n        <br />\n        Writer: {movies[0].Writer}\n        <br />\n        Year: {movies[0].Year}\n      </Typography>\n      <br />\n      Rating: {movies[0].imdbRating}\n      <StarBorderRoundedIcon style={{ color: 'gold' }} />\n      <StarBorderRoundedIcon style={{ color: 'gold' }} />\n      <StarBorderRoundedIcon style={{ color: 'gold' }} />\n      <StarBorderRoundedIcon style={{ color: 'gold' }} />\n    </div>\n  );\n};\n\nexport default Rating;\n","import { useState, React, useEffect, useContext } from 'react';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport DataContex from '../context/DataContext';\n\nexport const ComingSoon = () => {\n  const { commingSoon, isLoading, fetchError } = useContext(DataContex);\n\n  if (commingSoon) {\n    return <MoviesList movies={commingSoon} />;\n  }\n};\n","import { React, useContext, useEffect } from 'react';\nimport { Report, Loading } from 'notiflix/build/notiflix-loading-aio';\n\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport DataContext from '../context/DataContext';\nimport Rating from '../components/Rating/Rating';\nimport Typography from '@mui/material/Typography';\nimport { ComingSoon } from './ComingSoon';\n\nconst HomePage = () => {\n  const { movieReady, isLoading, fetchError } = useContext(DataContext);\n\n  return (\n    <section className=\"HomePage section\">\n      {isLoading && Loading.circle('Loading...')}\n      {fetchError &&\n        (Report.failure('Error', `${fetchError}`), Loading.remove())}\n      {!isLoading &&\n        !fetchError &&\n        (Loading.remove(),\n        (\n          <>\n            <Rating movies={movieReady} />\n            <MoviesList movies={movieReady} />\n\n            <Typography\n              variant=\"h2\"\n              component=\"h2\"\n              style={{\n                textAlign: 'center',\n                color: 'white',\n                margin: '100px 0px',\n              }}\n            >\n              Coming\n              <span style={{ color: 'red' }}>Soon</span>\n            </Typography>\n\n            <ComingSoon />\n          </>\n        ))}\n    </section>\n  );\n};\n\nexport default HomePage;\n"],"names":["movie","randomNumber","Math","floor","random","Grid","item","xs","sm","md","to","imdbID","Card","sx","maxWidth","className","CardMedia","height","image","Images","title","Title","CardContent","style","padding","Typography","gutterBottom","variant","component","imdbRating","StarBorderRounded","color","movies","Box","flexGrow","container","spacing","columns","map","margin","Plot","Awards","Writer","Year","ComingSoon","useContext","DataContex","commingSoon","isLoading","fetchError","MoviesList","DataContext","movieReady","Loading","Report","textAlign"],"sourceRoot":""}